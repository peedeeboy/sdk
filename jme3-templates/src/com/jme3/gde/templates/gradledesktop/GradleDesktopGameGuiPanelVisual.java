/*
 * Copyright (c) 2022 jMonkeyEngine
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the name of 'jMonkeyEngine' nor the names of its contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.jme3.gde.templates.gradledesktop;

import com.jme3.gde.templates.gradledesktop.options.GUILibrary;
import com.jme3.gde.templates.gradledesktop.options.LWJGLVersion;
import com.jme3.gde.templates.gradledesktop.options.NetworkingLibrary;
import com.jme3.gde.templates.gradledesktop.options.PhysicsLibrary;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import org.openide.WizardDescriptor;
import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;

/**
 *
 * @author peedeeboy
 */
public class GradleDesktopGameGuiPanelVisual extends JPanel {

    private final GradleDesktopGameGuiPanel panel;
    
    /**
     * Creates new form GradleDesktopGameGuiPanelVisual
     */
    public GradleDesktopGameGuiPanelVisual(GradleDesktopGameGuiPanel panel) {
        initComponents();
        updateGuiLibraryDescription();
        updatePhysicsLibraryDescription();
        updateNetworkingLibraryDescription();
        
        this.panel = panel;
    }

    private void updateGuiLibraryDescription() {
        GUILibrary selectedGuiLibrary = (GUILibrary) guiComboBox.getSelectedItem();
        guiDescriptionTextArea.setText(selectedGuiLibrary.getDescription());
    }
    
    private void updatePhysicsLibraryDescription() {
        PhysicsLibrary selectedPhysicsLibrary = (PhysicsLibrary) physicsEngineComboBox.getSelectedItem();
        physicsEngineDescriptionTextArea.setText(selectedPhysicsLibrary.getDescription());
    }
    
    private void updateNetworkingLibraryDescription() {
        NetworkingLibrary selectedNetworkingLibrary = (NetworkingLibrary) networkingComboBox.getSelectedItem();
        networkingDescriptionTextArea.setText(selectedNetworkingLibrary.getDescription());
    }
    
    protected void store(WizardDescriptor d) {
        GUILibrary selectedGuiLibrary = (GUILibrary) guiComboBox.getSelectedItem();
        PhysicsLibrary selectedPhysicsLibrary = (PhysicsLibrary) physicsEngineComboBox.getSelectedItem();
        NetworkingLibrary selectedNetworkingLibrary = (NetworkingLibrary) networkingComboBox.getSelectedItem();
        
        d.putProperty("guiLibrary", selectedGuiLibrary);
        d.putProperty("physicsLibrary", selectedPhysicsLibrary);
        d.putProperty("networkingLibrary", selectedNetworkingLibrary);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        guiLabel = new javax.swing.JLabel();
        guiComboBox = new javax.swing.JComboBox<>();
        guiDescriptionScrollPane = new javax.swing.JScrollPane();
        guiDescriptionTextArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        physicsEngineLabel = new javax.swing.JLabel();
        physicsEngineComboBox = new javax.swing.JComboBox<>();
        physicsEngineDescriptionScrollPane = new javax.swing.JScrollPane();
        physicsEngineDescriptionTextArea = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        networkingLabel = new javax.swing.JLabel();
        networkingComboBox = new javax.swing.JComboBox<>();
        networkingDescriptionScrollPane = new javax.swing.JScrollPane();
        networkingDescriptionTextArea = new javax.swing.JTextArea();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GradleDesktopGameGuiPanelVisual.class, "GradleDesktopGameGuiPanelVisual.jLabel1.text")); // NOI18N

        guiLabel.setLabelFor(guiComboBox);
        org.openide.awt.Mnemonics.setLocalizedText(guiLabel, org.openide.util.NbBundle.getMessage(GradleDesktopGameGuiPanelVisual.class, "GradleDesktopGameGuiPanelVisual.guiLabel.text")); // NOI18N

        guiComboBox.setModel(new DefaultComboBoxModel(GUILibrary.values()));
        guiComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guiComboBoxActionPerformed(evt);
            }
        });

        guiDescriptionTextArea.setEditable(false);
        guiDescriptionTextArea.setColumns(20);
        guiDescriptionTextArea.setLineWrap(true);
        guiDescriptionTextArea.setRows(3);
        guiDescriptionTextArea.setWrapStyleWord(true);
        guiDescriptionScrollPane.setViewportView(guiDescriptionTextArea);

        physicsEngineLabel.setLabelFor(physicsEngineComboBox);
        org.openide.awt.Mnemonics.setLocalizedText(physicsEngineLabel, org.openide.util.NbBundle.getMessage(GradleDesktopGameGuiPanelVisual.class, "GradleDesktopGameGuiPanelVisual.physicsEngineLabel.text")); // NOI18N

        physicsEngineComboBox.setModel(new DefaultComboBoxModel(PhysicsLibrary.values()));
        physicsEngineComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                physicsEngineComboBoxActionPerformed(evt);
            }
        });

        physicsEngineDescriptionTextArea.setEditable(false);
        physicsEngineDescriptionTextArea.setColumns(20);
        physicsEngineDescriptionTextArea.setLineWrap(true);
        physicsEngineDescriptionTextArea.setRows(3);
        physicsEngineDescriptionTextArea.setWrapStyleWord(true);
        physicsEngineDescriptionScrollPane.setViewportView(physicsEngineDescriptionTextArea);

        networkingLabel.setLabelFor(networkingComboBox);
        org.openide.awt.Mnemonics.setLocalizedText(networkingLabel, org.openide.util.NbBundle.getMessage(GradleDesktopGameGuiPanelVisual.class, "GradleDesktopGameGuiPanelVisual.networkingLabel.text")); // NOI18N

        networkingComboBox.setModel(new DefaultComboBoxModel(NetworkingLibrary.values()));
        networkingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkingComboBoxActionPerformed(evt);
            }
        });

        networkingDescriptionTextArea.setEditable(false);
        networkingDescriptionTextArea.setColumns(20);
        networkingDescriptionTextArea.setLineWrap(true);
        networkingDescriptionTextArea.setRows(3);
        networkingDescriptionTextArea.setWrapStyleWord(true);
        networkingDescriptionScrollPane.setViewportView(networkingDescriptionTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guiDescriptionScrollPane)
                            .addComponent(networkingDescriptionScrollPane)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(guiLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(guiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2)
                            .addComponent(physicsEngineDescriptionScrollPane)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(networkingLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(networkingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(physicsEngineLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(physicsEngineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guiLabel)
                    .addComponent(guiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guiDescriptionScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(physicsEngineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(physicsEngineLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(physicsEngineDescriptionScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(networkingLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networkingDescriptionScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guiComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_guiComboBoxActionPerformed
        updateGuiLibraryDescription();
    }//GEN-LAST:event_guiComboBoxActionPerformed

    private void physicsEngineComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_physicsEngineComboBoxActionPerformed
        updatePhysicsLibraryDescription();
    }//GEN-LAST:event_physicsEngineComboBoxActionPerformed

    private void networkingComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_networkingComboBoxActionPerformed
        updateNetworkingLibraryDescription();
    }//GEN-LAST:event_networkingComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> guiComboBox;
    private javax.swing.JScrollPane guiDescriptionScrollPane;
    private javax.swing.JTextArea guiDescriptionTextArea;
    private javax.swing.JLabel guiLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> networkingComboBox;
    private javax.swing.JScrollPane networkingDescriptionScrollPane;
    private javax.swing.JTextArea networkingDescriptionTextArea;
    private javax.swing.JLabel networkingLabel;
    private javax.swing.JComboBox<String> physicsEngineComboBox;
    private javax.swing.JScrollPane physicsEngineDescriptionScrollPane;
    private javax.swing.JTextArea physicsEngineDescriptionTextArea;
    private javax.swing.JLabel physicsEngineLabel;
    // End of variables declaration//GEN-END:variables
}
